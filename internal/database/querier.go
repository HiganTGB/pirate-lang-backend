// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package database

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	// AssignPermissionToRole assigns a permission to a role.
	AssignPermissionToRole(ctx context.Context, arg AssignPermissionToRoleParams) error
	// AssignRoleToUser assigns a role to a user.
	AssignRoleToUser(ctx context.Context, arg AssignRoleToUserParams) error
	// CreateAccount creates a new user and returns selected fields.
	CreateAccount(ctx context.Context, arg CreateAccountParams) (CreateAccountRow, error)
	// CreatePermission creates a new permission.
	CreatePermission(ctx context.Context, arg CreatePermissionParams) error
	// CreateRole creates a new role.
	CreateRole(ctx context.Context, arg CreateRoleParams) error
	// DeletePermission deletes a permission by its ID.
	DeletePermission(ctx context.Context, id uuid.UUID) error
	// DeleteRole deletes a role by its ID.
	DeleteRole(ctx context.Context, id uuid.UUID) error
	// GetPaginatedUsers retrieves a list of users with pagination.
	GetPaginatedUsers(ctx context.Context, arg GetPaginatedUsersParams) ([]GetPaginatedUsersRow, error)
	// GetPermissions retrieves all permissions.
	GetPermissions(ctx context.Context) ([]Permission, error)
	// GetRoles retrieves all roles.
	GetRoles(ctx context.Context) ([]Role, error)
	// GetUserByEmailOrUserNameOrId retrieves a user by email, user_name, or id.
	GetUserByEmailOrUserNameOrId(ctx context.Context, arg GetUserByEmailOrUserNameOrIdParams) (GetUserByEmailOrUserNameOrIdRow, error)
	// GetUsersCount returns the total number of users.
	GetUsersCount(ctx context.Context) (int64, error)
	// HasPermission checks if a user has a specific permission.
	HasPermission(ctx context.Context, arg HasPermissionParams) (bool, error)
	// PermissionExists checks if a permission with the given ID exists.
	PermissionExists(ctx context.Context, id uuid.UUID) (bool, error)
	// RoleExists checks if a role with the given ID exists.
	RoleExists(ctx context.Context, id uuid.UUID) (bool, error)
	// UpdatePassword updates the password for a given user ID.
	UpdatePassword(ctx context.Context, arg UpdatePasswordParams) error
}

var _ Querier = (*Queries)(nil)
